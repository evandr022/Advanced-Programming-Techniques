package model;

import java.sql.*;
import java.util.*;

import javax.swing.*;

import com.mysql.cj.jdbc.result.ResultSetMetaData;

public class recipe {
	private String title;
	private String ingredients;
	private String category;
	private String recipe;
	private byte[] imagem;
	DBConnection db = new DBConnection();
	
	public boolean saveData() {
		String query = "INSERT INTO 'recipebook'.''recipedata' (\r\n" + 
					   "'ID' , \r\n" +
					   "'title' ,\r\n" +
					   "'category' , \r\n" +
					   "'ingredients' , \r\n" +
					   "'recipe' ,\r\n" +
					   "'imagem' ,\r\n" + ")\r\n" +
					   "'VALUES' , (\r\n" + "NULL \r\n " +
					   this.title + "', '" +
					   this.category + "', '" +
					   this.ingredients + "', '" +
					   this.recipe + "', '" +
					   this.imagem + "', '" +
					   "\r\n " + ");";
		
		db.executeInsertUpdate(query);
		
		return true;
	}
	
	public recipe(String title, String ingredients, String category, String recipe, byte[] imagem) {
		super();
		this.title = title;
		this.ingredients = ingredients;
		this.category = category;
		this.recipe = recipe;
		this.imagem = imagem;
	}

	public recipe() {
		super();
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getIngredients() {
		return ingredients;
	}

	public void setIngredients(String ingredients) {
		this.ingredients = ingredients;
	}

	public String getCategory() {
		return category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	public String getRecipe() {
		return recipe;
	}

	public void setRecipe(String recipe) {
		this.recipe = recipe;
	}
	
	public byte[] getImagem() {
		return imagem;
	}

	public void setImagem(byte[] imagem) {
		this.imagem = imagem;
	}

	public void populateTable(JTable table, String category2) {
		String query = "Select title From 'recipebook'.'recipedata' where category='" + category2 + "'";
		ResultSet rs = db.executeSelect(query);
		
		if(rs != null) {
			table.setModel(resultSetToTableModel(rs));
		}
	}
	
	public TableModel resultSetToTableModel(ResultSet rs) {
		try {
			ResultSetMetaData metaData = rs.getMetaData();
			int numberOfColums = metaData.getColumnCount();
			Vector columnNames = new Vector();
			
			for(int column = 0; column < numberOfColums; column++) {
				columnNames.addElement(metaData.getColumnLabel(column + 1));
			}
			
			Vector rows = new Vector();
			
			while (rs.next()) {
				Vector newRow = new Vector();
				
				for(int i = 1; i <= numberOfColums; i++) {
					newRow.addElement(rs.getObject(i));
				}
				rows.addElement(newRow);
			}
			
			return new DefaulTableModel(rows, columnNames);
		}catch (Exception e){
			e.printStackTrace();
			
			return null;
		}
	}
}
